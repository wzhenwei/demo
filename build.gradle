
buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("se.transmode.gradle:gradle-docker:1.2")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
def dockerConfig =[register:'registry.cn-hangzhou.aliyuncs.com',namespace:'scvzerng']
allprojects{
    group 'com.yazuo.intelligent'
    version '1.0-SNAPSHOT'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'docker'
    apply plugin: 'maven'
    apply plugin: 'org.springframework.boot'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'
    repositories{
        maven {
            url 'https://repo.spring.io/libs-milestone'
        }
        maven {
            url 'https://repo.spring.io/libs-snapshot'
        }
        maven {url 'http://maven.aliyun.com/nexus/content/groups/public'}
        jcenter()
        mavenLocal()
        mavenCentral()

    }
    ext {
        fastjsonVersion = '1.2.37'
    }
    dependencies{
        testCompile group: 'junit', name: 'junit', version: '4.12'
        compile "com.alibaba:fastjson:${fastjsonVersion}"
        compile 'org.springframework.cloud:spring-cloud-starter-config'
        compile 'org.springframework.cloud:spring-cloud-starter-eureka'
        compile 'org.springframework.cloud:spring-cloud-sleuth-zipkin-stream'
        compile 'org.springframework.cloud:spring-cloud-starter-bus-kafka'
        compile 'org.springframework.boot:spring-boot-starter-actuator'
        compile 'org.springframework.cloud:spring-cloud-starter-sleuth'
    }

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Edgware.M1'
        }
    }
    task buildDocker(type: Docker, dependsOn: build) {
        push = true
        applicationName = jar.baseName
        tag = "${dockerConfig.register}/${dockerConfig.namespace}/${applicationName}"
        dockerfile = file('Dockerfile')
        doFirst {
            copy {
                from jar
                into "${stageDir}/target"
            }
        }
    }


}

